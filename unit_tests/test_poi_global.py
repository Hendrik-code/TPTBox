# Generated by CodiumAI
from __future__ import annotations

import random
import unittest
from collections.abc import Sequence

import numpy as np

from TPTBox import AX_CODES, POI, POI_Global
from TPTBox.core.poi_fun.poi_abstract import POI_Descriptor
from TPTBox.tests.test_utils import get_poi, get_random_ax_code


class TestPOI(unittest.TestCase):
    def test_glob_by_definition(self):
        poi = get_poi()
        poi.orientation = ("R", "A", "S")
        poi.zoom = (1, 1, 1)
        glob_poi = POI_Global(poi._get_centroids().copy())
        poi = poi.reorient(get_random_ax_code())
        poi.rescale_((3, 2, 1))
        glob_poi.to_other_poi(poi)

    def test_is_global(self):
        poi = get_poi()
        poi.orientation = ("L", "A", "S")
        poi.zoom = (1, 1, 0.5)
        self.assertFalse(poi.is_global)
        glob_poi = POI_Global(poi._get_centroids().copy())
        self.assertTrue(glob_poi.is_global)

    def test_copy(self):
        poi = get_poi()
        glob_poi = POI_Global(poi)

        c = glob_poi.copy()
        self.assertEqual(c, glob_poi)
        c[1, 1] = (-5, -10, -100)
        self.assertNotEqual(c, glob_poi)

        c = glob_poi.copy()
        self.assertEqual(c.info, glob_poi.info)
        c.info["Meaning_of_live"] = 42
        self.assertNotEqual(c.info, glob_poi.info)

        c = glob_poi.copy()
        self.assertEqual(c.format, glob_poi.format)
        c.format = 10
        self.assertNotEqual(c.format, glob_poi.format)

        glob_poi.info["Question_of_the_meaning_of_live"] = "Unknown"
        glob_poi.format = 1
        self.assertEqual(c, glob_poi)
        glob_poi[3, 4] = (1, 2, 3)
        self.assertNotEqual(c, glob_poi)

        c = glob_poi.copy()
        self.assertEqual(c, glob_poi)
        c[1, 1] = (-5, -10, -100)
        self.assertNotEqual(c, glob_poi)

        c = glob_poi.copy()
        self.assertEqual(c.info, glob_poi.info)
        c.info["Meaning_of_live"] = 42
        self.assertNotEqual(c.info, glob_poi.info)

        c = glob_poi.copy()
        self.assertEqual(c.format, glob_poi.format)
        c.format = 10
        self.assertNotEqual(c.format, glob_poi.format)

        self.assertEqual(len(glob_poi.copy(centroids=POI_Descriptor())), 0)

    def test_subreg_labes(self):
        from TPTBox.core.vert_constants import vert_subreg_labels

        self.assertEqual(len(vert_subreg_labels()), 10)
